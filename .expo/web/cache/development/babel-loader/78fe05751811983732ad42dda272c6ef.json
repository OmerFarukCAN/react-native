{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\OmerFarukCAN\\\\dev\\\\rn-starter\\\\src\\\\screens\\\\SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_ICREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"change_red\":\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case \"change_green\":\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    case \"change_blue\":\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(ColorCounter, {\n    color: \"Red\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: \"change_red\",\n        payload: COLOR_ICREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: \"change_red\",\n        payload: -1 * COLOR_ICREMENT\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    color: \"Blue\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: \"change_blue\",\n        payload: COLOR_ICREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: \"change_blue\",\n        payload: -1 * COLOR_ICREMENT\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    color: \"Green\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: \"change_green\",\n        payload: COLOR_ICREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: \"change_green\",\n        payload: -1 * COLOR_ICREMENT\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      margin: 130,\n      backgroundColor: \"rgb(\" + state.red + \", \" + state.green + \", \" + state.blue + \")\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["C:/Users/OmerFarukCAN/dev/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_ICREMENT","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","height","width","margin","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport ColorCounter from \"../components/ColorCounter\";\r\n\r\nconst COLOR_ICREMENT = 15;\r\n\r\nconst reducer = (state, action) => {\r\n  //state === { red: number, green: number, blue: number }\r\n  //action === { type: 'change_red' || 'change_green' || 'change_blue', payload: 15 || -15 }\r\n\r\n  switch (action.type) {\r\n    case \"change_red\":\r\n      return state.red + action.payload > 255 || state.red + action.payload < 0\r\n        ? state\r\n        : { ...state, red: state.red + action.payload };\r\n    case \"change_green\":\r\n      return state.green + action.payload > 255 ||\r\n        state.green + action.payload < 0\r\n        ? state\r\n        : { ...state, green: state.green + action.payload };\r\n    case \"change_blue\":\r\n      return state.blue + action.payload > 255 ||\r\n        state.blue + action.payload < 0\r\n        ? state\r\n        : { ...state, blue: state.blue + action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst SquareScreen = () => {\r\n  const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\r\n\r\n  return (\r\n    <View>\r\n      <ColorCounter\r\n        color=\"Red\"\r\n        onIncrease={() =>\r\n          dispatch({ type: \"change_red\", payload: COLOR_ICREMENT })\r\n        }\r\n        onDecrease={() =>\r\n          dispatch({ type: \"change_red\", payload: -1 * COLOR_ICREMENT })\r\n        }\r\n      />\r\n      <ColorCounter\r\n        color=\"Blue\"\r\n        onIncrease={() =>\r\n          dispatch({ type: \"change_blue\", payload: COLOR_ICREMENT })\r\n        }\r\n        onDecrease={() =>\r\n          dispatch({ type: \"change_blue\", payload: -1 * COLOR_ICREMENT })\r\n        }\r\n      />\r\n      <ColorCounter\r\n        color=\"Green\"\r\n        onIncrease={() =>\r\n          dispatch({ type: \"change_green\", payload: COLOR_ICREMENT })\r\n        }\r\n        onDecrease={() =>\r\n          dispatch({ type: \"change_green\", payload: -1 * COLOR_ICREMENT })\r\n        }\r\n      />\r\n      <View\r\n        style={{\r\n          height: 150,\r\n          width: 150,\r\n          margin: 130,\r\n          backgroundColor: `rgb(${state.red}, ${state.green}, ${state.blue})`,\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default SquareScreen;\r\n"]},"metadata":{},"sourceType":"module"}